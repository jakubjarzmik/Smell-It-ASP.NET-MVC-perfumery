@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<li class="dropdown dropdown-slide">
    <a href="#!" class="dropdown-toggle" data-toggle="dropdown" data-hover="dropdown">
        <i class="tf-ion-ios-person"></i> @await WebsiteTexts.GetValueAsync("MyAccount")
    </a>
    @if (SignInManager.IsSignedIn(User))
    {

        <ul class="dropdown-menu">
            <li>
                Zalogowano jako: @User.Identity?.Name
            </li>
            <li>
                <div>
                    <a class="btn btn-small col-sm-5" asp-controller="Orders" asp-action="Index">@await WebsiteTexts.GetValueAsync("Orders")</a>
                    <a class="col-sm-5 col-sm-offset-2 btn btn-small" id="manage" asp-area="Identity" asp-page="/Account/Manage/Index">@await WebsiteTexts.GetValueAsync("Manage")</a>
                </div>
            </li>
            <li>
                <hr />
            </li>
            <li class="text-center">
                <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button id="logout" type="submit" class="btn btn-small ">@await WebsiteTexts.GetValueAsync("Logout")</button>
                </form>
            </li>

        </ul>
    }
    else
    {
        <ul class="dropdown-menu">
            <li>
                <a id="register" asp-area="Identity" asp-page="/Account/Register">@await WebsiteTexts.GetValueAsync("Register")</a>
            </li>
            <li>
                <a id="login" asp-area="Identity" asp-page="/Account/Login">@await WebsiteTexts.GetValueAsync("SignIn")</a>
            </li>
        </ul>
    }
</li>