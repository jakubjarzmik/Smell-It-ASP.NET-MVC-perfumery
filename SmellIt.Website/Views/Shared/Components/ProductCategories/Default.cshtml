@model IEnumerable<SmellIt.Application.SmellIt.ProductCategories.ProductCategoryDto>
@{
    var requestCulture = Context.Request.HttpContext.Features.Get<IRequestCultureFeature>()!;
    var currentCulture = requestCulture.RequestCulture.Culture.ToString();
    int i = 0;
    bool isSecond = false;
}

<li class="dropdown dropdown-slide">
    <a href="#" class="dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" data-delay="350"
       role="button" aria-haspopup="true" aria-expanded="false">
        @WebsiteTexts.GetValue("Products") <span class="tf-ion-ios-arrow-down"></span>
    </a>
    <div class="dropdown-menu">
        <div class="row">
            <div class="col-lg-12 col-md-12 mb-sm-12">
                <ul>
                    <li><a class="text-center" href="/products">@WebsiteTexts.GetValue("AllProducts")</a></li>
                    <li role="separator" class="divider"></li>
                </ul>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6 col-md-6 mb-sm-3">
                <ul>
                    @foreach (var item in Model)
                    {
                        var itemName = currentCulture == "en-GB" ? item.NameEn : item.NamePl;

                        if (item.ParentCategory == null)
                        {
                            if (i != 0)
                            {
                                @Html.Raw(isSecond ? "</ul></div></div><div class=\"row\"><div class=\"col-lg-6 col-md-6 mb-sm-3\"><ul>" : "</ul></div><div class=\"col-lg-6 col-md-6 mb-sm-3\"><ul>")
                                isSecond = !isSecond;
                            }
                            <li class="dropdown-header">@itemName</li>
                            <li role="separator" class="divider"></li>
                            <li><a href="/products/@item.EncodedName">@WebsiteTexts.GetValue("All")</a></li>
                        }
                        else
                        {
                            <li><a href="/products/@item.EncodedName">@itemName</a></li>
                        }
                        i++;
                    }
                </ul>
            </div>
        </div>
    </div>
</li>