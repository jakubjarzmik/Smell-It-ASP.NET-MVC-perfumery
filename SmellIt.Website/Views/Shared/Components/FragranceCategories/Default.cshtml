@using Microsoft.AspNetCore.Mvc.TagHelpers
@model IEnumerable<SmellIt.Application.Features.FragranceCategories.DTOs.WebsiteFragranceCategoryDto>
@{
    var fragranceCategories = Model.OrderBy(m => m.Name).Select(m => new { Name = m.Name, EncodedName = m.EncodedName });

    var queryString = Context.Request.Query;

    var routeValues = new Dictionary<string, string>();
    foreach (var key in queryString.Keys)
    {
        if (key != "fragrance_category")
        {
            routeValues[key] = queryString[key];
        }
    }
}
<li><a asp-all-route-data="routeValues">@await WebsiteTexts.GetValueAsync("All")</a></li>
@foreach (var fragranceCategory in fragranceCategories)
{
    routeValues["fragrance_category"] = fragranceCategory.EncodedName;
    if (queryString.ContainsKey("fragrance_category") && queryString["fragrance_category"] == fragranceCategory.EncodedName)
    {
        <li><strong><a asp-all-route-data="routeValues">@fragranceCategory.Name</a></strong></li>
    }
    else
    {
        <li><a asp-all-route-data="routeValues">@fragranceCategory.Name</a></li>
    }
}