@model SmellIt.Application.Features.Orders.Commands.CreateOrder.CreateOrderCommand
@{
    ViewData["Title"] = await WebsiteTexts.GetValueAsync("Checkout");
}

<section class="page-header">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="content">
                    <h1 class="page-name">@await WebsiteTexts.GetValueAsync("Checkout")</h1>
                </div>
            </div>
        </div>
    </div>
</section>
<div class="page-wrapper">
    <div class="checkout shopping">
        <div class="container">
            <form asp-controller="Checkout" asp-action="PlaceOrder" method="POST" >
                <div class="row">
                    <div class="col-md-8">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="block">
                                    <h4 class="widget-title">@await WebsiteTexts.GetValueAsync("Delivery")</h4>
                                    @foreach (var item in ViewBag.Deliveries)
                                    {
                                        <div class="form-check">
                                            <input class="form-check-input delivery-option" type="radio" name="DeliveryId" id="@item.EncodedName" value="@item.Id" data-price="@item.Price" @(Model.DeliveryId == item.Id ? "checked" : "")>

                                            <label class="form-check-label no-bold" for="@item.EncodedName">
                                                @item.Name - @item.Price zł
                                            </label>
                                        </div>
                                    }
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="block">
                                    <h4 class="widget-title">@await WebsiteTexts.GetValueAsync("Payment")</h4>
                                    @foreach (var item in ViewBag.Payments)
                                    {
                                        <div class="form-check">
                                            <input class="form-check-input" type="radio" name="PaymentId" id="@item.EncodedName" value="@item.Id" @(Model.PaymentId == item.Id ? "checked" : "")>
                                            <label class="form-check-label no-bold" for="@item.EncodedName">
                                                @item.Name
                                            </label>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="block">
                                    <h4 class="widget-title">@await WebsiteTexts.GetValueAsync("Address")</h4>
                                    <span class="checkout-form">
                                        <div class="form-group">
                                            <label for="FullName">@await WebsiteTexts.GetValueAsync("FullName")*</label>
                                            <input type="text" class="form-control" id="FullName" asp-for="FullName" name="FullName" value="@Model.FullName">
                                        </div>
                                        <div class="form-group">
                                            <label for="FirstLine">@await WebsiteTexts.GetValueAsync("FirstLine")*</label>
                                            <input type="text" class="form-control" id="FirstLine" asp-for="FirstLine" name="FirstLine" value="@Model.FirstLine">
                                        </div>
                                        <div class="form-group">
                                            <label for="SecondLine">@await WebsiteTexts.GetValueAsync("SecondLine")</label>
                                            <input type="text" class="form-control" id="SecondLine" asp-for="SecondLine" name="SecondLine" value="@Model.SecondLine">
                                        </div>
                                        <div class="checkout-country-code clearfix">
                                            <div class="form-group">
                                                <label for="PostalCode">@await WebsiteTexts.GetValueAsync("PostalCode")*</label>
                                                <input type="text" class="form-control" id="PostalCode" asp-for="PostalCode" name="PostalCode" value="@Model.PostalCode">
                                            </div>
                                            <div class="form-group">
                                                <label for="City">@await WebsiteTexts.GetValueAsync("City")*</label>
                                                <input type="text" class="form-control" id="City" asp-for="City" name="City" value="@Model.City">
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label for="PhoneNumber">@await WebsiteTexts.GetValueAsync("Phone")*</label>
                                            <input type="text" class="form-control" id="PhoneNumber" asp-for="PhoneNumber" name="PhoneNumber" value="@Model.PhoneNumber">
                                        </div>
                                    </span>
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="col-md-4">
                        <div class="product-checkout-details">
                            <div class="block">
                                <h4 class="widget-title">@await WebsiteTexts.GetValueAsync("OrderSummary")</h4>
                                @await Component.InvokeAsync("Cart", new { forCheckout = true })
                                <ul class="summary-prices">
                                    <li>
                                        <span>@await WebsiteTexts.GetValueAsync("ProductsPrice"):</span>
                                        <span id="product-total" class="total-price">@ViewBag.CartViewModel.TotalPrice zł</span>
                                    </li>
                                    <li>
                                        <span>@await WebsiteTexts.GetValueAsync("Delivery"):</span>
                                        <span id="delivery-price"> zł</span>
                                    </li>
                                </ul>
                                <div class="summary-total">
                                    <span>@await WebsiteTexts.GetValueAsync("Total"):</span>
                                    <span id="total-price" class="total-price"> zł</span>
                                </div>
                            </div>
                            <div class="block">
                                <div class="form-group">
                                    <label for="notes">@await WebsiteTexts.GetValueAsync("MessageToTheSeller")</label>
                                    <textarea class="form-control" id="notes" asp-for="Notes" name="Notes"></textarea>
                                </div>
                            </div>
                            <div class="block">
                                <button type="submit" class="btn btn-main">@await WebsiteTexts.GetValueAsync("PlaceOrder")</button>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
@section Scripts
    {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            updatePrices();

            document.querySelectorAll('.delivery-option').forEach(function (radio) {
                radio.addEventListener('change', function () {
                    updatePrices();
                });
            });
        });

        function updatePrices() {
            var productTotal = parseFloat(document.getElementById('product-total').textContent);

            var deliveryPrice = parseFloat(document.querySelector('.delivery-option:checked').dataset.price);

            var totalPrice = productTotal + deliveryPrice;

            document.getElementById('delivery-price').textContent = deliveryPrice.toFixed(2) + ' zł';
            document.getElementById('total-price').textContent = totalPrice.toFixed(2) + ' zł';
        }
    </script>
}
