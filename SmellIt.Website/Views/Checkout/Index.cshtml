@model SmellIt.Application.ViewModels.Website.CheckoutViewModel
@{
    ViewData["Title"] = await WebsiteTexts.GetValueAsync("Checkout");
    var checker = false;
}

<section class="page-header">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="content">
                    <h1 class="page-name">@await WebsiteTexts.GetValueAsync("Checkout")</h1>
                </div>
            </div>
        </div>
    </div>
</section>
<div class="page-wrapper">
    <div class="checkout shopping">
        <div class="container">
            <div class="row">
                <div class="col-md-8">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="block">
                                <h4 class="widget-title">@await WebsiteTexts.GetValueAsync("Delivery")</h4>
                                @foreach (var item in Model.Deliveries)
                                {
                                    <div class="form-check">
                                        <input class="form-check-input delivery-option" type="radio" name="delivery" id="@item.EncodedName" data-price="@item.Price" @(checker==false? "checked":"")>
        
                                        <label class="form-check-label no-bold" for="@item.EncodedName">
                                            @item.Name - @item.Price zł
                                        </label>
                                    </div>
                                    checker = true;
                                }
                                @{ checker = false;}
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="block">
                                <h4 class="widget-title">@await WebsiteTexts.GetValueAsync("Payment")</h4>
                                @foreach (var item in Model.Payments)
                                {
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" name="payment" id="@item.EncodedName" @(checker == false ? "checked" : "")>
                                        <label class="form-check-label no-bold" for="@item.EncodedName">
                                            @item.Name
                                        </label>
                                    </div>
                                    checker = true;
                                }
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="block">
                                <h4 class="widget-title">@await WebsiteTexts.GetValueAsync("Address")</h4>
                                <form class="checkout-form">
                                    <div class="form-group">
                                        <label for="first-line">@await WebsiteTexts.GetValueAsync("FirstLine")*</label>
                                        <input type="text" class="form-control" id="first-line" placeholder="">
                                    </div>
                                    <div class="form-group">
                                        <label for="second-line">@await WebsiteTexts.GetValueAsync("SecondLine")</label>
                                        <input type="text" class="form-control" id="second-line" placeholder="">
                                    </div>
                                    <div class="checkout-country-code clearfix">
                                        <div class="form-group">
                                            <label for="postal-code">@await WebsiteTexts.GetValueAsync("PostalCode")*</label>
                                            <input type="text" class="form-control" id="postal-code" name="postal-code" value="">
                                        </div>
                                        <div class="form-group">
                                            <label for="city">@await WebsiteTexts.GetValueAsync("City")*</label>
                                            <input type="text" class="form-control" id="city" name="city" value="">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="country">@await WebsiteTexts.GetValueAsync("Country")*</label>
                                        <input type="text" class="form-control" id="country" placeholder="">
                                    </div>
                                    <div class="form-group">
                                        <label for="phone-number">@await WebsiteTexts.GetValueAsync("Phone")*</label>
                                        <input type="text" class="form-control" id="phone-number" placeholder="">
                                    </div>
                                    <div class="form-group">
                                        <label for="email">E-mail*</label>
                                        <input type="text" class="form-control" id="email" placeholder="">
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                    
                </div>
                <div class="col-md-4">
                    <div class="product-checkout-details">
                        <div class="block">
                            <h4 class="widget-title">@await WebsiteTexts.GetValueAsync("OrderSummary")</h4>
                            @await Component.InvokeAsync("Cart", new { forCheckout = true })
                            <ul class="summary-prices">
                                <li>
                                    <span>@await WebsiteTexts.GetValueAsync("ProductsPrice"):</span>
                                    <span id="product-total" class="total-price">@Model.CartViewModel.TotalPrice zł</span>
                                </li>
                                <li>
                                    <span>@await WebsiteTexts.GetValueAsync("Delivery"):</span>
                                    <span id="delivery-price"> zł</span>
                                </li>
                            </ul>
                            <div class="summary-total">
                                <span>@await WebsiteTexts.GetValueAsync("Total"):</span>
                                <span id="total-price" class="total-price"> zł</span>
                            </div>
                        </div>
                        <div class="block">
                            <a asp-controller="Checkout" asp-action="OrderConfirmation" class="btn btn-main">@await WebsiteTexts.GetValueAsync("PlaceOrder")</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts
{
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            updatePrices();
            
            document.querySelectorAll('.delivery-option').forEach(function (radio) {
                radio.addEventListener('change', function () {
                    updatePrices();
                });
            });
        });

        function updatePrices() {
            var productTotal = parseFloat(document.getElementById('product-total').textContent);
            
            var deliveryPrice = parseFloat(document.querySelector('.delivery-option:checked').dataset.price);
            
            var totalPrice = productTotal + deliveryPrice;
            
            document.getElementById('delivery-price').textContent = deliveryPrice.toFixed(2) + ' zł';
            document.getElementById('total-price').textContent = totalPrice.toFixed(2) + ' zł';
        }
    </script>

}
