@model SmellIt.Application.Features.Products.WebsiteProductDto
@{
    ViewData["Title"] = $"{Model.Brand?.Name} - {Model.Name}";

    var requestCulture = Context.Request.HttpContext.Features.Get<IRequestCultureFeature>()!;
    var currentCulture = requestCulture.RequestCulture.Culture.ToString();
    bool active = false;
}
<section class="single-product">
    <div class="container">
        <div class="row mt-20">
            <div class="col-md-5">
                <div class="single-product-slider">
                    <div id='carousel-custom' class='carousel slide' data-ride='carousel'>
                        <div class='carousel-outer'>
                            <div class='carousel-inner '>
                                @foreach (var photo in Model.ProductImages!)
                                {
                                    <div class='item @(active ? "" : "active")'>
                                            <img src='@photo.ImageUrl' alt='@photo.ImageAlt' data-zoom-image="@photo.ImageUrl" />
                                        </div>
                                    active = true;
                                }
                            </div>
                            <a class='left carousel-control' href='#carousel-custom' data-slide='prev'>
                                <i class="tf-ion-ios-arrow-left"></i>
                            </a>
                            <a class='right carousel-control' href='#carousel-custom' data-slide='next'>
                                <i class="tf-ion-ios-arrow-right"></i>
                            </a>
                        </div>
                        <ol class='carousel-indicators mCustomScrollbar meartlab'>
                            @foreach (var photo in Model.ProductImages!)
                            {
                                <li data-target='#carousel-custom' data-slide-to='0' class='active'>
                                    <img src='@photo.ImageUrl' alt='@photo.ImageAlt' />
                                </li>
                            }
                        </ol>
                    </div>
                </div>
            </div>
            <div class="col-md-7">
                <div class="single-product-details">
                    <h2>
                        @Model.Brand?.Name - @Model.Name
                    </h2>
                    @if (Model.PromotionalPrice == null)
                    {
                        <p class="product-price">@Model.Price.Value zł</p>
                    }
                    else
                    {
                        <p class="product-price"><del>@Model.Price.Value</del> @Model.PromotionalPrice.Value zł</p>
                        <p>@await WebsiteTexts.GetValueAsync("Last30DaysLowestPrice"): @Model.Last30DaysLowestPrice zł</p>
                    }
                    <p class="product-description mt-20">
                        @Model.Description
                    </p>
                    @if (Model.ProductCategory != null)
                    {
                        <p>
                            <strong>@await WebsiteTexts.GetValueAsync("Category"): </strong>
                            @Model.ProductCategory.Name
                        </p>
                    }
                    @if (Model.Capacity != null)
                    {
                        <p>
                            <strong>@await WebsiteTexts.GetValueAsync("Capacity"): </strong>
                            @Model.Capacity ml
                        </p>
                    }
                    @if (Model.Gender != null)
                    {
                        <p>
                            <strong>@await WebsiteTexts.GetValueAsync("Gender"): </strong>
                            @(currentCulture == "pl-PL" ? Model.Gender?.NamePl : Model.Gender?.NameEn)
                        </p>
                    }
                    @if (Model.FragranceCategory != null)
                    {
                        <p>
                            <strong>@await WebsiteTexts.GetValueAsync("FragranceCategory"): </strong>
                            @Model.FragranceCategory.Name
                        </p>
                    }

                    <div class="product-quantity">
                        <span>@await WebsiteTexts.GetValueAsync("Quantity"):</span>
                        <div class="product-quantity-slider">
                            <input id="product-quantity" type="text" value="1" name="product-quantity">
                        </div>
                    </div>

                    <a href="" class="btn btn-main mt-20">@await WebsiteTexts.GetValueAsync("AddToCart")</a>

                </div>
            </div>
        </div>
    </div>
</section>