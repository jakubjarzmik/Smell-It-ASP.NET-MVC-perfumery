@model SmellIt.Application.SmellIt.HomeBanners.Commands.EditHomeBanner.EditHomeBannerCommand

@{
    ViewData["Title"] = language.GetValue("EditHomeBanner");
}
<div class="container">
    <div class="row">
        <div class="col s12">
            <div class="card grey darken-3 white-text">
                <div class="card-content">
                    <div class="row">
                        <div class="card-title col s12">
                            <a class="btn left" asp-controller="HomeBanners" asp-action="Index"> <i class="material-icons">arrow_back_ios_new</i></a>
                            <p class="right">@language.GetValue("EditHomeBanner") @Model.Key</p>
                        </div>
                        <form asp-action="Edit">
                            <div asp-validation-summary="ModelOnly" class="helper-text"></div>
                            <img class="image-in-modal" src="@Model.ImagePath" />
                            <div class="input-field col s12">
                                <label asp-for="TextPl">(PL) @language.GetValue("Text")</label>
                                <textarea class="materialize-textarea" asp-for="TextPl"></textarea>
                                <span asp-validation-for="TextPl" class="helper-text"></span>
                            </div>
                            <div class="input-field col s12">
                                <label asp-for="TextEn">(EN) @language.GetValue("Text")</label>
                                <textarea class="materialize-textarea" asp-for="TextEn"></textarea>
                                <span asp-validation-for="TextEn" class="helper-text"></span>
                            </div>
                            <input type="submit" value="@language.GetValue("Save")" class="btn right" />
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}