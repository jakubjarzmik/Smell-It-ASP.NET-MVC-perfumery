@model SocialSitesViewModel
@{
    ViewData["Title"] = language.GetValue("SocialSites");
}
<div class="card-content">
    <div class="card-title">
        @language.GetValue("SocialSites")
        <a class="btn right" href="@Url.Action("Create")"> <i class="material-icons">add</i></a>
    </div>

    <table class="striped">
        <thead>
            <tr>
                <th>Link</th>
                <th>@language.GetValue("Type")</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @{
                int index = 0;
            }
            @foreach (var item in Model.Items!)
            {
                var link = "";
                link = item.Link.Length > 80 ? item.Link.Substring(0, 80) + "..." : item.Link;
                <tr>
                    <td>@link</td>
                    <td>@item.Type</td>
                    <td class="right">
                        <a href="#modalDescriptionPL_@index" class="btn modal-trigger"><i class="material-icons">more</i></a>
                        <div id="modalDescriptionPL_@index" class="modal">
                            <div class="modal-content">
                                <h4>@item.Type</h4>
                                <h5>Link</h5>
                                <p>@item.Link</p>
                            </div>
                            <div class="modal-footer">
                                <a href="#!" class="modal-close btn">@language.GetValue("Close")</a>
                            </div>
                        </div>
                        <a asp-controller="SocialSites" asp-action="Edit" asp-route-encodedName="@item.EncodedName" class="btn"> <i class="material-icons">edit</i></a>
                        <a asp-controller="SocialSites" asp-action="Delete" asp-route-encodedName="@item.EncodedName" class="btn"> <i class="material-icons">delete</i></a>
                    </td>
                </tr>
                index++;
            }
        </tbody>
    </table>
</div>
<div class="card-action">
    <ul class="pagination">
        <li class="@(Model.CurrentPage == 1 ? "disabled" : "waves-effect")">
            <a asp-action="Index" asp-route-page="@(Model.CurrentPage - 1)" class="purple-text" style="@(Model.CurrentPage == 1 ? "display: none;" : "")">
                <i class="material-icons">chevron_left</i>
            </a>
        </li>
        @{
            for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="@(Model.CurrentPage == i ? "active purple lighten-1" : "waves-effect")">
                    <a asp-action="Index" asp-route-page="@i" class="@(Model.CurrentPage == i ? "white-text" : "purple-text")">
                        @i
                    </a>
                </li>
            }
        }
        <li class="@(Model.CurrentPage == Model.TotalPages ? "disabled" : "waves-effect")">
            <a asp-action="Index" asp-route-page="@(Model.CurrentPage + 1)" class="purple-text" style="@(Model.CurrentPage == Model.TotalPages ? "display: none;" : "")">
                <i class="material-icons">chevron_right</i>
            </a>
        </li>
    </ul>
</div>